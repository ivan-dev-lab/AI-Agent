# -*- coding: utf-8 -*-
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from keyboards import main_menu_kb, back_kb
from callbacks import CB_BACK, CB_SETTINGS

router = Router()

def main_menu_text() -> str:
    return (
        "üèÅ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ. –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç <i>–ø–æ—Å–ª–µ</i> –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.\n"
        "–¢–∞–π–º–∑–æ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: <b>UTC</b>.\n"
    )

async def show_main_menu(target):
    if isinstance(target, Message):
        await target.answer(main_menu_text(), reply_markup=main_menu_kb())
    else:
        await target.message.edit_text(main_menu_text(), reply_markup=main_menu_kb())

@router.message(Command("start"))
async def cmd_start(msg: Message):
    await show_main_menu(msg)

@router.message(Command("help"))
async def cmd_help(msg: Message):
    await show_main_menu(msg)

@router.callback_query(F.data == CB_BACK)
async def cb_back(cq: CallbackQuery):
    # —Å–±—Ä–æ—Å in-memory FSM (–µ—Å–ª–∏ –≥–¥–µ-—Ç–æ –±—ã–ª)
    from handlers.text import USER_STATE
    USER_STATE.pop(cq.from_user.id, None)
    await show_main_menu(cq)

@router.callback_query(F.data == CB_SETTINGS)
async def cb_settings(cq: CallbackQuery):
    from handlers.text import USER_STATE
    USER_STATE.pop(cq.from_user.id, None)
    text = (
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "‚Ä¢ –¢–∞–π–º–∑–æ–Ω–∞: –ø–æ–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é <b>UTC</b>.\n"
        "‚Ä¢ –í –±—É–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏ —Ç—É—Ç –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ—é IANA TZ.\n"
    )
    await cq.message.edit_text(text, reply_markup=back_kb())
