# -*- coding: utf-8 -*-
from aiogram import Router, F
from aiogram.filters import Command, CommandObject
from aiogram.types import Message, CallbackQuery
from typing import Optional

from keyboards import main_menu_kb, ga_main_kb, back_kb, InlineKeyboardMarkup, InlineKeyboardButton
from utils import ensure_authorized, is_global_admin
from db import consume_pending_la, get_school_by_id
from config import DB_PATH
import aiosqlite


router = Router()


async def _show_main_for(user_id: int, target):
    if not await ensure_authorized(user_id, target):
        return
    if await is_global_admin(user_id):
        text = (
            "üèÅ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–ì–ª–æ–±–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ."
        )
        kb = ga_main_kb()
    else:
        text = (
            "üèÅ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ. –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç <i>–ø–æ—Å–ª–µ</i> –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.\n"
            "–¢–∞–π–º–∑–æ–Ω–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: <b>UTC</b>."
        )
        kb = main_menu_kb()

    if isinstance(target, Message):
        await target.answer(text, reply_markup=kb)
    else:
        await target.message.edit_text(text, reply_markup=kb)


def _cancel_kb():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_activation")]
    ])


@router.callback_query(F.data == "cancel_activation")
async def cb_cancel_activation(cq: CallbackQuery):
    # FSM –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –õ–ê —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤ admin_global.py
    await _show_main_for(cq.from_user.id, cq)


@router.message(Command("start"))
async def cmd_start(msg: Message, command: CommandObject):
    arg = command.args

    if arg and arg.isdigit():
        target_user_id = int(arg)
        if target_user_id != msg.from_user.id:
            await msg.answer(
                "‚ùå –í—ã –Ω–µ —Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n"
                "–≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞."
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        async with aiosqlite.connect(DB_PATH) as db:
            db.row_factory = aiosqlite.Row
            cursor = await db.execute(
                "SELECT 1 FROM pending_local_admins WHERE user_id = ?", (target_user_id,)
            )
            row = await cursor.fetchone()
            if not row:
                await msg.answer("‚ùå –î–ª—è –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è.")
                await _show_main_for(msg.from_user.id, msg)
                return

        # === –ü–ï–†–ï–î–ê–Å–ú –£–ü–†–ê–í–õ–ï–ù–ò–ï –í ADMIN_GLOBAL.PY —á–µ—Ä–µ–∑ FSM ===
        from handlers.admin_global import COMMON_STATE
        COMMON_STATE[msg.from_user.id] = {"mode": "await_la_password"}
        await msg.answer(
            "üîê –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ <b>–ø–∞—Ä–æ–ª—å</b>, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:",
            reply_markup=_cancel_kb()
        )
        return

    await _show_main_for(msg.from_user.id, msg)


@router.message(Command("help"))
async def cmd_help(msg: Message):
    await _show_main_for(msg.from_user.id, msg)


# –£–î–ê–õ–Å–ù: @router.message(F.text) ‚Äî –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –≤ admin_global.py


@router.callback_query(F.data == "back_to_main")
async def cb_back(cq: CallbackQuery):
    await _show_main_for(cq.from_user.id, cq)


@router.callback_query(F.data == "settings")
async def cb_settings(cq: CallbackQuery):
    if not await ensure_authorized(cq.from_user.id, cq):
        return
    await cq.message.edit_text(
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n–°–∫–æ—Ä–æ —Ç—É—Ç –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∞–π–º–∑–æ–Ω—É –∏ –¥—Ä—É–≥–æ–µ.",
        reply_markup=back_kb()
    )