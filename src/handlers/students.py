# -*- coding: utf-8 -*-
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command
import aiosqlite

from config import DB_PATH
from keyboards import back_kb, single_col_kb
from callbacks import (
    CB_ADD_STUDENT, CB_REGISTER,
    CB_STU_AFTER_ADD_SKIP, CB_ENROLL_PICK_CLS
)
from utils import display_student

router = Router()

@router.callback_query(F.data == CB_ADD_STUDENT)
async def cb_add_student(cq: CallbackQuery):
    from handlers.text import USER_STATE
    USER_STATE[cq.from_user.id] = {"mode": "add_student", "step": 0, "data": {}, "chat_id": cq.message.chat.id}
    await cq.message.edit_text(
        "üë§ <b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞</b>\n\n"
        "–®–∞–≥ 1/2: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>–∏–º—è —É—á–µ–Ω–∏–∫–∞</b>.\n", reply_markup=back_kb()
    )

@router.callback_query(F.data == CB_REGISTER)
async def cb_register(cq: CallbackQuery):
    from handlers.text import USER_STATE
    USER_STATE[cq.from_user.id] = {"mode": "register", "step": 0, "data": {}, "chat_id": cq.message.chat.id}
    await cq.message.edit_text(
        "üí¨ <b>–ü—Ä–∏–≤—è–∑–∞—Ç—å —á–∞—Ç —É—á–µ–Ω–∏–∫–∞</b>\n\n"
        "–®–∞–≥ 1/1: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>–∏–º—è —É—á–µ–Ω–∏–∫–∞</b> –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —ç—Ç–æ–º—É —á–∞—Ç—É.\n", reply_markup=back_kb()
    )

# –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ª–ª–±—ç–∫ –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è: –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–µ–Ω–∏–∫–∞ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑–∞—Ç—å –∫–ª–∞—Å—Å—ã
@router.callback_query(F.data == CB_STU_AFTER_ADD_SKIP)
async def cb_stu_after_add_skip(cq: CallbackQuery):
    await cq.message.edit_text("–û–∫, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º. –ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=back_kb())
